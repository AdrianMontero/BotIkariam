/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Core.Bot;
import Objetos.Ciudad;
import Objetos.Edificio;
import Objetos.HiloPrincipal;
import java.awt.List;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

/**
 *
 * @author ADRIAN
 */
public class JPLogin extends javax.swing.JPanel {

    WebDriver driverLog = JFPrincipal.driverFull;
    java.util.List<WebElement> listaServers;
    Ciudad gestorCiudad = new Ciudad();
    Edificio gestorEdificio = new Edificio();

    /**
     * Creates new form JPLogin
     */
    public JPLogin() {
        initComponents();
        try {
            cargarLog();
        } catch (InterruptedException ex) {
            Logger.getLogger(JPLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jlUserLog = new javax.swing.JLabel();
        jtfUserLog = new javax.swing.JTextField();
        jlPassLog = new javax.swing.JLabel();
        jtfPassLog = new javax.swing.JTextField();
        jbntConectarLog = new javax.swing.JButton();
        jlServerLog = new javax.swing.JLabel();
        jcbServerList = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jLabel6.setText("Ataques automatizados");

        setBackground(new java.awt.Color(58, 56, 77));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlUserLog.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jlUserLog.setText("Usuario");
        add(jlUserLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, -1, -1));
        add(jtfUserLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 200, 30));

        jlPassLog.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jlPassLog.setText("Contrase침a");
        add(jlPassLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, -1, -1));
        add(jtfPassLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 200, 30));

        jbntConectarLog.setBackground(new java.awt.Color(102, 0, 51));
        jbntConectarLog.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jbntConectarLog.setText("Conectar");
        jbntConectarLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntConectarLogActionPerformed(evt);
            }
        });
        add(jbntConectarLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, 300, 40));

        jlServerLog.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jlServerLog.setText("Servidor");
        add(jlServerLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, -1, -1));

        add(jcbServerList, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 200, 40));

        jPanel2.setBackground(new java.awt.Color(38, 40, 55));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("0.2");

        jLabel2.setFont(new java.awt.Font("Open Sans Condensed", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("IkaBot");

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Subida automatizada de edificios");

        jLabel4.setFont(new java.awt.Font("Open Sans Condensed", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Pr칩ximas Funcionalidades");

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ataques automatizados");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Donaciones autom치ticas");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Visi칩n de recursos general");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(49, 49, 49)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 352));
    }// </editor-fold>//GEN-END:initComponents

    private void jbntConectarLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntConectarLogActionPerformed
        //Nos logueamos
        conectar();
        Bot miBot = new Bot();
        int ciudadesIkariam;
        int ciudadesBD;
        int diferenciaCiudadesIkaBD; //Almacena cuantas ciudades de diferencia hay entre la BD e ikariam

        /*try {
            gestorCiudad.lookCities();
        } catch (InterruptedException ex) {
            Logger.getLogger(JPLogin.class.getName()).log(Level.SEVERE, null, ex);
        }*/

        //Al inicio capturamos la informacion de todoas las ciudades y edificios de esa ciudad que hay en Ikariam que todavia no estan en la BD          
        try {
            //Vemos cuantas islas hay en la BD y cuantas hay actualmente en ikariam
            ciudadesIkariam = gestorCiudad.askCitiesIka();
            ciudadesBD = gestorCiudad.askNumberCitiesBD();
            
            if(ciudadesBD != ciudadesIkariam){
                diferenciaCiudadesIkaBD = ciudadesIkariam - ciudadesBD;
                for(int i = 0; i < diferenciaCiudadesIkaBD; i++){
                    ciudadesBD++; 
                    
                    //Guardamos las ciudades que no tenemos en la BD
                    try {
                        gestorCiudad.stockCity(ciudadesBD); //Guardamos la informacion perteneciente a esa ciudad
                        miBot.setConstruccionesPorCiudad(ciudadesBD); //Guardamos los edificios pertenecientes a esa ciudad
                    } catch (InterruptedException ex) {
                        Logger.getLogger(JPLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                } 
            }
        //Una vez recogida la informacion que faltase perteneciente a las islas le indicamos al hilo principal del programa que empiece
        new Thread(new HiloPrincipal()).start();
        } catch (SQLException ex) {
            Logger.getLogger(JPLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jbntConectarLogActionPerformed

    public void conectar() {
        //Parametros que almacenan los datos introducidos por el usuario
        int servSelecIndex = jcbServerList.getSelectedIndex();
        String user = jtfUserLog.getText();
        String pass = jtfPassLog.getText();

        //Elementos de la web
        WebElement ddServersLog = driverLog.findElement(By.id("logServer"));
        Select select = new Select(ddServersLog);
        WebElement UserLog = driverLog.findElement(By.id("loginName"));
        WebElement PassLog = driverLog.findElement(By.id("loginPassword"));
        WebElement btnLogin = driverLog.findElement(By.id("loginBtn"));

        //Asignacion de parametros del usuario con elementos de la web
        select.selectByIndex(servSelecIndex);
        //select.selectByIndex(11);
        UserLog.sendKeys(jtfUserLog.getText());
        //UserLog.sendKeys("blizzartess");
        PassLog.sendKeys(jtfPassLog.getText());
        //PassLog.sendKeys("");

        //Entrando
        btnLogin.click();

    }

    public void cargarLog() throws InterruptedException {
        // Optional, if not specified, WebDriver will search your path for chromedriver.
        System.setProperty("webdriver.chrome.driver", "C:\\SeleniumDrivers\\chromedriver.exe");

        //Nos conectamos a la web
        driverLog.get("https://es.ikariam.gameforge.com/index.php?logout=1");

        //Eliminamos pop-up si existe
        driverLog.navigate().refresh();

        //Clicamos en elboton de login
        WebElement btnLogin = driverLog.findElement(By.id("btn-login"));
        btnLogin.click();

        //Seleccionamos un mundo
        WebElement ddServersLog = driverLog.findElement(By.id("logServer"));
        Select select = new Select(ddServersLog);

        listaServers = select.getOptions();
        for (int i = 0; i < listaServers.size(); i++) {
            jcbServerList.addItem(listaServers.get(i).getText());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jbntConectarLog;
    private javax.swing.JComboBox<String> jcbServerList;
    private javax.swing.JLabel jlPassLog;
    private javax.swing.JLabel jlServerLog;
    private javax.swing.JLabel jlUserLog;
    private javax.swing.JTextField jtfPassLog;
    private javax.swing.JTextField jtfUserLog;
    // End of variables declaration//GEN-END:variables
}
