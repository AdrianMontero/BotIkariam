/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Core.Bot;
import java.awt.List;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

/**
 *
 * @author ADRIAN
 */
public class JPLogin extends javax.swing.JPanel {

    WebDriver driverLog = JFPrincipal.driverFull;
    java.util.List<WebElement> listaServers;
    Bot miBot = new Bot();

    /**
     * Creates new form JPLogin
     */
    public JPLogin() {
        initComponents();
        try {
            cargarLog();
        } catch (InterruptedException ex) {
            Logger.getLogger(JPLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlUserLog = new javax.swing.JLabel();
        jtfUserLog = new javax.swing.JTextField();
        jlPassLog = new javax.swing.JLabel();
        jtfPassLog = new javax.swing.JTextField();
        jbntConectarLog = new javax.swing.JButton();
        jlServerLog = new javax.swing.JLabel();
        jcbServerList = new javax.swing.JComboBox<>();

        jlUserLog.setText("Usuario");

        jlPassLog.setText("Contrase√±a");

        jbntConectarLog.setText("Conectar");
        jbntConectarLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbntConectarLogActionPerformed(evt);
            }
        });

        jlServerLog.setText("Servidor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfUserLog)
                            .addComponent(jtfPassLog)
                            .addComponent(jbntConectarLog, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlServerLog)
                                    .addComponent(jlUserLog)))
                            .addComponent(jcbServerList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jlPassLog)))
                .addContainerGap(268, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jlServerLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbServerList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jlUserLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfUserLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlPassLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfPassLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbntConectarLog)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbntConectarLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbntConectarLogActionPerformed
        //Nos logueamos
        conectar();

        try {
            miBot.lookCities();
        } catch (InterruptedException ex) {
            Logger.getLogger(JPLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Pruebas
        System.out.println("Respuesta sobre ciudades: " + miBot.askCitiesIka());
        try {
            System.out.println("Respuesta sobre ciudades en bd: " + miBot.askCitiesBD());
        } catch (SQLException ex) {
            Logger.getLogger(JPLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbntConectarLogActionPerformed

    public void conectar() {
        //Parametros que almacenan los datos introducidos por el usuario
        int servSelecIndex = jcbServerList.getSelectedIndex();
        String user = jtfUserLog.getText();
        String pass = jtfPassLog.getText();

        //Elementos de la web
        WebElement ddServersLog = driverLog.findElement(By.id("logServer"));
        Select select = new Select(ddServersLog);
        WebElement UserLog = driverLog.findElement(By.id("loginName"));
        WebElement PassLog = driverLog.findElement(By.id("loginPassword"));
        WebElement btnLogin = driverLog.findElement(By.id("loginBtn"));

        //Asignacion de parametros del usuario con elementos de la web
        select.selectByIndex(servSelecIndex);
        UserLog.sendKeys(jtfUserLog.getText());
        PassLog.sendKeys(jtfPassLog.getText());

        //Entrando
        btnLogin.click();

    }

    public void cargarLog() throws InterruptedException {
        // Optional, if not specified, WebDriver will search your path for chromedriver.
        System.setProperty("webdriver.chrome.driver", "C:\\SeleniumDrivers\\chromedriver.exe");

        //Nos conectamos a la web
        driverLog.get("https://es.ikariam.gameforge.com/index.php?logout=1");

        //Eliminamos pop-up si existe
        driverLog.navigate().refresh();

        //Clicamos en elboton de login
        WebElement btnLogin = driverLog.findElement(By.id("btn-login"));
        btnLogin.click();

        //Seleccionamos un mundo
        WebElement ddServersLog = driverLog.findElement(By.id("logServer"));
        Select select = new Select(ddServersLog);

        listaServers = select.getOptions();
        for (int i = 0; i < listaServers.size(); i++) {
            jcbServerList.addItem(listaServers.get(i).getText());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbntConectarLog;
    private javax.swing.JComboBox<String> jcbServerList;
    private javax.swing.JLabel jlPassLog;
    private javax.swing.JLabel jlServerLog;
    private javax.swing.JLabel jlUserLog;
    private javax.swing.JTextField jtfPassLog;
    private javax.swing.JTextField jtfUserLog;
    // End of variables declaration//GEN-END:variables
}
